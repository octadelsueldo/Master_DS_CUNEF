# Poblacion
x <- 1:100  #la poblacion son 100 personas
# Tamano muestral
nmuestra <-30
# Eleccion de las muestras
set.seed(2021) # Para reproducir resultados
# Muestra sin reemplazamiento
m_sinrem <- sample(x, nmuestra, replace = FALSE)   #sample permite simular distribuciones discretas
m_sinrem
table(m_sinrem)  #la tabla nos muestra la frecuencia
# Muestra con reemplazamiento
m_conrem <- sample(x, nmuestra, replace = TRUE)  #con reemplazamiento cuando quiere o tiene q repetir algunos valores
m_conrem
table(m_conrem)
rm(list=ls())
datos<-read.table("Cotizaciones2020.txt",header=T)
names(datos)
rm(list=ls())
datos<-read.table("Cotizaciones2020.txt",header=T)
names(datos)
attach(datos)
nrow(datos)
ncol(datos)
n <- dim(datos)[1]
n
RIBEX <- IBEX[2:n]/IBEX[1:n-1] - 1
RIBEX2  <- log(IBEX[2:n] / IBEX[1:n-1])
RSAN  <- SAN.MC[2:n] / SAN.MC[1:n-1] - 1
RSAN2  <- log(SAN.MC[2:n] / SAN.MC[1:n-1])
RTL5 <- TL5.MC[2:n] / TL5.MC[1:n-1] - 1
RTL52  <- log(TL5.MC[2:n] / TL5.MC[1:n-1])
plot(RIBEX, RIBEX2)
var.test(RIBEX,RIBEX2) # Igualdad de volatilidades
t.test(RIBEX, RIBEX2) # Igualdad de medias
t.test(RIBEX, RIBEX2, var.equal = TRUE) # Igualdad de medias con var. igules
plot(RSAN, RSAN2)
var.test(RSAN,RSAN2) # Igualdad de volatilidades
t.test(RSAN, RSAN2) # Igualdad de medias
t.test(RSAN, RSAN2, var.equal = TRUE) # Igualdad de medias con var. igules
plot(RTL5, RTL52)
var.test(RTL5,RTL52) # Igualdad de volatilidades
t.test(RTL5, RTL52) # Igualdad de medias
t.test(RTL5, RTL52, var.equal = TRUE) # Igualdad de medias con var. igules
rm(list=ls())
datos<-read.table("Cotizaciones2020.txt",header=T)
names(datos)
attach(datos)
p_break <- 164 # a apartir de la linea 164 colocarle el numero 1 al vector
covid <- c(rep(0,p_break),rep(1,nrow(datos)-p_break)) #vector covid con unos y ceros
Precios<-cbind(IBEX, SAN.MC, BBVA.MC, REP.MC, ITX.MC, TL5.MC, covid) #con cbind unimos todas las columnas mas el covid para poder comparar en base a el pbreak
set.seed(2020)
nrow(Precios) #precios son los individuos
nmuestra <- 30 #tamanio de la muestra
# Primero elegimos los numeros de la muestra y luego los seleccionamos
indices <- sample(1:nrow(Precios), nmuestra, replace = FALSE) #muestra aleatoria de 30 individuos sin reemplazamiento
indices
Precios.muestra <- Precios[indices,] #crea el dataframe precios.muestra con todas las columnas y con 30 filas
# Comprobacion
Precios.muestra
nrow(Precios.muestra) #vemos que el dataframe tiene 30 filas
# Comparacion de medias poblacion y muestra
mean(IBEX) #media de Ibex
mean(Precios.muestra[,1]) #media del Ibex en la muestra
summary(Precios.muestra) #vemos los principales estadisticos, media, mediana, cuartiles, max y min.
t.test(REP.MC ~  covid)
t.test(Precios.muestra[,4] ~ Precios.muestra[,7]) #la variable 4 es REP y la variable 7 es el covid. Aqui vemos que los valores de la muestra no son muy diferentes
t.test(ITX.MC ~  covid) #se rechaza la hipotesis nula porque el p valor < 5%
t.test(Precios.muestra[,5] ~ Precios.muestra[,7]) #se rechaza la hipotesis nula porque el p valor < 5%
t.test(Precios[,4], Precios[,5])   #compara muestras no apareadas
longitud<-(-16.55260)-(-15.59078)
longitud
t.test(Precios.muestra[,4], Precios.muestra[,5])
t.test(Precios[,4], Precios[,5], paired = TRUE) #importante poner paired igual a true
longitud2<-(-16.29236)-(-15.85102)
longitud2
t.test(Precios.muestra[,4], Precios.muestra[,5], paired = TRUE)
n <- dim(datos)[1]
n
RIBEX <- IBEX[2:n]/IBEX[1:n-1] - 1 #rentabilidad del IBEX
RREP  <- REP.MC[2:n] / REP.MC[1:n-1] - 1 #rentabilidad REPSOL
RITX  <- ITX.MC[2:n] / ITX.MC[1:n-1] - 1 #rentabilidad ITX
covidr <- covid[2:n] #agregamos un vector de rendimiento en base al covid
covidr <-as.factor(covidr)
var.test(RREP[indices], RITX[indices])  #contrasta la hipotesis de cociente de varianzas.La hipotesis nula dice q Varianza del rep sobre varianza del itx es igual a 1, la alternativa que es distinto de uno.
t.test(RREP[indices], RITX[indices], paired= TRUE, var.equal = TRUE) #esta se usa para mejorar los valores ya que son apareados
t.test(RREP[indices], RITX[indices], var.equal = TRUE)
var.test(RREP, RITX) #se rechaza la hipotesis nula de igualdad de varianzas al ser p valor<5% por lo tanto las varianzas no son iguales
t.test(RREP, RITX, var.equal = TRUE) #no se rechaza la hipotesis nula al ser p valor > 5%
t.test(RREP, RITX, paired= TRUE, var.equal = TRUE)#con datos apareados se confirma que no se rechaza la hipotesis nula al ser p valor > 5%
t.test(RREP ~ covidr) #no se rechaza la hipotesis nula
data("mtcars")
names(mtcars)
help(mtcars)
mtcars
attach(mtcars)
qqnorm(mpg)
qqline(mpg)
shapiro.test(mpg)
boxplot(mpg ~ am) # boxplot de mpg segun trasmision
par(mfrow=c(1,2))
qqnorm(mpg[am==0]); qqline(mpg[am==0])
qqnorm(mpg[am==1]); qqline(mpg[am==1])
par(mfrow=c(1,1))
shapiro.test(mpg[am==0])
shapiro.test(mpg[am==1])
t.test(mpg ~ am)
var.test(mpg ~ am)
t.test(mpg ~ am,var.equal=T,conf.level=0.95)
prop.test(270,600)
prop.test(270,600,conf.level=0.95)  #aqui prop.test contrasta que la hipotesis nula tiene un p igual a 0.5 y la hipotesis alternativa que es distinto de 0.5
#aqui ya vemos que hay que rechazar la hipotesis nula xq es distinto de 0.5
prop.test(270,600,conf.level=0.99)
#-----------------------------------------------------------------------
# Contraste de hipotesis H0: p=0.5 frente a distinto
#-----------------------------------------------------------------------
prop.test(270, 600, p = 0.5,
alternative = c("two.sided"),
conf.level = 0.95)
#-----------------------------------------------------------------------
# Intervalo de confianza para la proporcion duplicando el tamano muestral
#-----------------------------------------------------------------------
prop.test(2*270,2*600,conf.level=0.95)
#-----------------------------------------------------------------------
# Probabilidades teoricas y frecuencias
#-----------------------------------------------------------------------
rm(list=ls())
pteorico <- c(0.45, 0.35, 0.15, 0.05)
frecuencia <- c(49, 27, 14, 10)
barplot(pteorico,names.arg =c("bajo", "medio", "alto", "muy alto")) #diagrama de barras. Los argumentos se pueden hacer con el names.arg
t2 <- rbind(pteorico*100, frecuencia)
barplot(t2,names.arg =c("bajo", "medio", "alto", "muy alto"))
testchi2 <- chisq.test(frecuencia , p = pteorico)  #frecuencia es ka frecuencia de los datos
testchi2
testchi2$expected  #estos son los valores esperados suponiendo que la hipotesis es cierta
chisq.test(frecuencia , p = pteorico, simulate.p.value = TRUE) #una variante
rm(list=ls())
frecuencias<-c(32,37,20,7,4)
ndatos<-sum(frecuencias)
#-----------------------------------------------------------------------
# Barplot de los Datos
#-----------------------------------------------------------------------
x<-c(0:4)
barplot(frecuencias,names.arg=0:4,xlab="N?mero de cancelaciones")
# Calculo de las probabilidades te?ricas
lambda <- 1.1
prob<-c(dpois(0:3,lambda),1-ppois(3,lambda))
prob
sum(prob)
chisq.test(frecuencias, p=prob)
chisq.test(frecuencias, p=prob)$expected
rm(list=ls())
data(swiss)
names(swiss)
help(swiss)
attach(swiss)
qqnorm(Education) #qq significa quantile quantile. Comparar los quantiles teoricos con los quantiles muestrales. Si  la distr es normal los quant teoricos de la distribucion deben coincidir con los quant muestrales
qqline(Education) #si todos los datos fueran normales todos deberian estar sobre la linea recta. La hipotesis nula aqui es que los datos son normales
shapiro.test(Education)
#se rechaza la hipotesis nula
qqnorm(Agriculture)
qqline(Agriculture)
shapiro.test(Agriculture)
X <- as.data.frame(swiss)
X
par(mfrow=c(2,3))
for (j in 1:6) {
qqnorm(X[,j],main=colnames(X)[j],xlab="",col="blue",lwd=1)
qqline(X[,j],main=colnames(X)[j],xlab="",col="red",lwd=1)
}
# Contraste Shapiro Wilks
sapply(seq(1,6),function(j) shapiro.test(X[,j])) #con shapiro y sapply reviso si todas las variables se comportan como normal
datos <- c(0.4,  3.8,  3.9,  2.2,  4.9, 12.6,  7.9, 15.3, 11.5,  6.3)
mean(datos)
ks.test(datos,"pexp", rate=1/5) #distribucion como p exp que es funcion exponencial y parametro rate (la inversda de la media)
ks.test(datos,"pexp") # Rechaza H0! Xq el r entiende que el pexp es lo mas basico y cree que la media es 1 entonces sale rechazado
x<-rexp(100,1/5)  #genera 100 muestras de la distrib exponencial con media 5
ks.test(x,"pexp", rate=1/5)
hist(x)
rm(list=ls())
library(ISLR)
data("Wage")
help(Wage)
variable.names(Wage)
str(Wage)
attach(Wage)
head(Wage)
t0<-table(race)
t0
sum(t0)
t0/sum(t0)
barplot(table(race))
t1<-table(race,education)  #table tiene que reconocer que son variables categoricas
t1
sum(t1)
margin.table(t1, 1) # Obtiene el total Filas. Pone uno para refererise a las filas
margin.table(t1, 2) # Columnas. Pone 2 para referirse a las columnas
addmargins(t1, c(1, 2)) # Totales Filas y Columnas
prop.table(t1,1)
prop.table(t1,2)
chisq.test(t1) # Se rechaza la hipotesis de independencia
chisq.test(t1)$expected  #esta tendria que salir en caso de que fueran independientes
t1-chisq.test(t1)$expected  #aca muestra donde hay mas diferencia
max(t1-chisq.test(t1)$expected)  #aca sirve para reconocer donde hay mas discrepancia en el caso de independencia
which.max(t1-chisq.test(t1)$expected)
t2<-table(health,education)
t2
chisq.test(t2) # Se rechaza la hipotesis de independencia
t2-chisq.test(t2)$expected
max(t2-chisq.test(t2)$expected)
t3<-table(race,education)
t3
chisq.test(t3) # Se rechaza la hipotesis de independencia
t3-chisq.test(t3)$expected
max(t3-chisq.test(t3)$expected)
fumar <- matrix(c(14, 17, 18, 16, 88, 83, 82, 80),4,2)
fumar
colnames(fumar) <- c("Fumadores", "No Fumadores")
rownames(fumar) <- c("F1", "F2", "F3", "F4")
fumar
chisq.test(fumar)
chisq.test(fumar)$expected
chisq.test(fumar)$statistic
library(MASS)
fisher.test(fumar)
rm(list=ls())
data(swiss)
names(swiss)
help(swiss)
attach(swiss)
library(randtests)
runs.test(Education)
runs.test(Education)$p.value
X <- as.data.frame(swiss)
X
# Contraste Wald-Wolfowitz
sapply(seq(1,6),function(j) runs.test(X[,j]))
rm(list=ls())
set.seed(2020)
x  <- c(-2,-1,0,1,2)
probabilidad <- c(0.15, 0.25, 0.3, 0.2, 0.1)
sum(probabilidad)
nmuestra <- 10000
muestrax <- sample(x, nmuestra, replace = T, prob = probabilidad) #el replace lo pongo True para elegir muestras distintas
table(muestrax)
sum(table(muestrax))
table(muestrax)/sum(table(muestrax))
barplot(table(muestrax))
mean(muestrax)
sd(muestrax)
rm(list=ls())
media<- 3
dt   <- 0.15
# Exacta
1-pnorm(3.1,media,dt) # 0.2524925
# Simulada
nmuestrasim<-10000
set.seed(111)
muestrasim <- rnorm(nmuestrasim, media, dt)
muestrasim; boxplot(muestrasim)
# Simulacion
m1<-sum(muestrasim>3.1)
Prob1 <- m1/nmuestrasim
Prob1
# Exacta
pnorm(2.8,media,dt) # 0.09121122
m2<-sum(muestrasim<=2.8)
Prob2 <- m2/nmuestrasim
Prob2
# Exacta
pnorm(3.25,media,dt)-pnorm(2.9,media,dt) # 0.6997171
m3<-sum(muestrasim<=3.25 & muestrasim>2.9 )
nmuestrasim<-10000
Prob3 <- m3/nmuestrasim
Prob3
#----------------------------------------------------------------------
# Muestra aleatoria de n=500 de Poisson con lambda=75
#----------------------------------------------------------------------
rm(list=ls())
set.seed(11)
muestra<-rpois(500,75)
muestra
#----------------------------------------------------------------------
# Caracter?sticas de la muestra
#----------------------------------------------------------------------
mean(muestra)
sd(muestra)
summary(muestra)
#----------------------------------------------------------------------
# Histograma de la muestra
#----------------------------------------------------------------------
hist(muestra)
hist(muestra,breaks=50:110,xlab="x",ylab="frecuencia",main="Histograma")
#----------------------------------------------------------------------
# Histograma de la muestra con estimaci?n de la densidad
#----------------------------------------------------------------------
hist(muestra,breaks=50:110,xlab="n?mero de contactos",ylab="frecuencia relativa",
main="Histograma y kernel",prob=T)
lines(density(muestra))
# Incluyendo menos intervalos
hist(muestra,xlab="n?mero de contactos",ylab="frecuencia relativa",
main="Histograma y kernel",prob=T)
lines(density(muestra))
muestra90<-sum(muestra>90)
muestra90
# Usando la probabilidad
round(500*(1-ppois(90,75)),1)
#----------------------------------------------------------------------
# Gr?fico conjunto de la  muestra de contactos y la te?rica de Poisson.
#----------------------------------------------------------------------
hist(muestra,breaks=50:110,xlab="x",ylab="frecuencia",main="Histograma",
probability = "T")
lines(0:110,dpois(0:110,75))
rm(list=ls())
n<- 1000
set.seed(2020)
sumalog <- numeric(n)
for(i in 1:n){
sumalog[i] <-
rlnorm(1, meanlog = 0, sdlog = 1)+
rlnorm(1, meanlog = 0, sdlog = 2)+
rlnorm(1, meanlog = 0, sdlog = 3)
}
# Caracter?sticas de la distribuci?n de la Suma
sumalog
summary(sumalog)
qqnorm(sumalog,col="blue",lwd=1)
qqline(sumalog)
# QQ plot del logaritmo de la distribuci?n de la Suma
qqnorm(log(sumalog),col="blue",lwd=1)
qqline(log(sumalog))
# Histograma y kernel de la distribuci?n de la Suma
hist(sumalog,probability = T)
lines(density(sumalog)) # no funciona
# Caracter?sticas del logaritmo de la distribuci?n de la Suma
hist(log(sumalog),probability = TRUE)
lines(density(log(sumalog)))
box(col="black")
mean(sumalog)
t.test(sumalog)$conf.int
sd(sumalog)
shapiro.test(sumalog)
shapiro.test(log(sumalog))
rbvn<-function (n, rho)
{
x <- rnorm(n, 0, 1)
y <- rnorm(n, rho * x, sqrt(1 - rho^2))
cbind(x, y)
}
bvn<-rbvn(10000,0.98)
par(mfrow=c(3,2))
plot(bvn,col=1:100)
plot(bvn,type="l")
plot(ts(bvn[,1]))
plot(ts(bvn[,2]))
hist(bvn[,1],40) # MARGINAL 1
hist(bvn[,2],40) # MARGINAL 2
par(mfrow=c(1,1))
library(markovchain)
P <- matrix(c(0.37,0.23,0.22,
0.18,0.45,0.3,
0.45,0.32,0.48),nrow = 3)
P
CMT <- new("markovchain",transitionMatrix=P,states=c("Movistar","Orange","Vodafone"),
name="Telefon?a")
CMT
plot(CMT)
summary(CMT)
X0 <- c(23/(30+25+23),30/(30+25+23),25/(30+25+23)) # La distribucion de X en t = 0
X0
X1 <- X0*(CMT^1)
X1
CMT^2
X2 <- X0*(CMT^2)
X2
CMT^5
X5 <- X0*(CMT^5)
X5
DistEst <- steadyStates(CMT)
DistEst
rm(list=ls())
datos<-read.table("Cotizaciones2020.txt",header=T)
names(datos)
attach(datos)
head(datos)
tail(datos)
n <- dim(datos)[1]
RIBEX <- IBEX[2:n]/IBEX[1:n-1] - 1
RSAN  <- SAN.MC[2:n] / SAN.MC[1:n-1] - 1
RBBVA  <- BBVA.MC[2:n] / BBVA.MC[1:n-1] - 1
RREP  <- REP.MC[2:n] / REP.MC[1:n-1] - 1
RITX  <- ITX.MC[2:n] / ITX.MC[1:n-1] - 1
RTL5 <- TL5.MC[2:n] / TL5.MC[1:n-1] - 1
plot(RIBEX, RSAN,main = "Modelo R(SAN)=a+bR(IBEX)", col = "red")
modelo1 <- lm(RSAN ~ RIBEX)
summary(modelo1)
abline(modelo1)
modelo2 <- lm(RBBVA ~ RIBEX)
summary(modelo2)
abline(modelo2)
modelo3 <- lm(RREP ~ RIBEX)
summary(modelo3)
abline(modelo3)
modelo4 <- lm(RITX ~ RIBEX)
summary(modelo4)
abline(modelo4)
modelo5 <- lm(RTL5 ~ RIBEX)
summary(modelo5)
abline(modelo5)
rm(list=ls())
data(cars)
attach(cars)
help(cars)
plot(speed, dist)
for (b in c(2,3,5)) {
lines(ksmooth(speed, dist, "normal", bandwidth = b),col=b)
}
plot(speed, dist)
for (b in c(2,3,5)) {
lines(ksmooth(speed, dist, "box", bandwidth = b),col=b)
}
